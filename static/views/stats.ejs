<!doctype html>
<html lang="en">

<head>
    <style>
        canvas {
            padding-left: 0;
            padding-right: 0;
            margin-left: auto;
            margin-right: auto;
            display: block;
            /* width: 800px; */
            width: 80%;
            height: 40%;
        }
    </style>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link href="/static/styles/main.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0/dist/Chart.min.js"></script>
</head>

<body>
    <header>
        <div class="navbar navbar-dark bg-dark shadow-sm">
            <div class="container d-flex justify-content-between">
                <a href="/" class="navbar-brand d-flex align-items-center">
                    <strong>Signed in as: @<%= user %> %><a href="/" class="btn btn-secondary my-2">Logout</a></li>
                    </strong>
                </a>
            </div>
        </div>
    </header>
</body>

<main role="main">
    <section class="jumbotron text-center">
        <div>
            <h1 class="jumbotron-heading">osu! Reports Stats</h1>
        </div>
        Have any suggestions for data you would like graphed? Message @osureports.
        </br>
        </br>
        <canvas id="SessionGlobalRankChart" maintainAspectRatio="true"> </canvas>
        <canvas id="SessionPPChart" maintainAspectRatio="true"> </canvas>
        <canvas id="SessionAccChart" maintainAspectRatio="true"> </canvas>

        <script>
            var xlabels = [];
            var ylabels = [];

            <% for (var x = 0; x < sessionObjectsSQL.length; x++) { %>
                xlabels.push("<%= sessionObjectsSQL[x].date %>");
                ylabels.push(<%= sessionObjectsSQL[x].globalRank %>);
            <% } %>


            var ctx = document.getElementById('SessionGlobalRankChart').getContext('2d');
            var SessionGlobalRankChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: xlabels,
                    datasets: [{
                        label: 'Global Rank',
                        data: ylabels,
                        fill: false,
                        backgroundColor: 'rgba(77, 164, 248, 0.5)',
                        borderColor: 'rgba(77, 164, 248, 1)',
                        borderWidth: 1
                    }]
                },
                maintainAspectRatio: true,
                options: {
                    responsive: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                reverse: true,
                                beginAtZero: false,
                                callback: function (value, index, values) {
                                    return "#" + value + ""
                                }
                            }
                        }],
                    }
                }
            });

            document.getElementById("SessionGlobalRankChart").onclick = function (evt) {
                var activePoints = SessionGlobalRankChart.getElementsAtEvent(evt);
                var firstPoint = activePoints[0];
                var label = SessionGlobalRankChart.data.labels[firstPoint._index];
                var value = SessionGlobalRankChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];
                console.log(firstPoint._index)
            };

        </script>

        </br>
        </br>
        <!-- <canvas id="SessiontotalPPChart" width="500" height="200" maintainAspectRatio="true"> </canvas> -->
        <!-- <script>
            var xlabels = [];
            var ylabels = [];

            <% for (var x = 0; x < sessionObjectsSQL.length; x++) { %>
                xlabels.push("<%= sessionObjectsSQL[x].date %>");
                ylabels.push(<%= sessionObjectsSQL[x].sessionDurationMilli %>);
            <% } %>

            var ctx = document.getElementById('SessionDurationChart').getContext('2d');
            var SessionDurationChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: xlabels,
                    datasets: [{
                        label: 'Session duration in milliseconds',
                        data: ylabels,
                        fill: false,
                        backgroundColor: 'rgba(77, 164, 248, 0.5)',
                        borderColor: 'rgba(77, 164, 248, 1)',
                        borderWidth: 1
                    }]
                },
                maintainAspectRatio: true,
                options: {
                    responsive: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: false,
                                callback: function (value, index, values) {
                                    //return (value / 60000).toFixed(2) + " minutes";
                                    var milliseconds = value
                                    var seconds = ((milliseconds / 1000) % 60).toFixed(0);
                                    var minutes = ((milliseconds / (1000 * 60)) % 60).toFixed(0);
                                    var hours = ((milliseconds / (1000 * 60 * 60)) % 24).toFixed(0);

                                    //console.log(seconds + " " + minutes + " " + hours)
                                    if (seconds >= 30) {
                                        minutes = minutes - 1
                                    }
                                    if (minutes >= 30) {
                                        hours = hours - 1
                                    }


                                    var timeStringANDLongEnough = [];
                                    if (hours == 0) {
                                        if (minutes == 0) {
                                            return seconds + "s"
                                        }
                                        else {
                                            return minutes + "m"
                                        }
                                    }
                                    else {
                                        if (hours == 1) {
                                            if (minutes == 1) {
                                                return hours + "h & " + minutes + "m"
                                            }
                                            else {
                                                return hours + "h & " + minutes + "m"
                                            }
                                        }
                                        else {
                                            if (minutes == 1) {
                                                return hours + "h & " + minutes + "m"
                                            }
                                            else {
                                                return hours + "h & " + minutes + "m"
                                            }
                                        }
                                    }
                                }
                            }
                        }],
                    }
                }
            });

            // document.getElementById("myChart").onclick = function (evt) {
            //     var activePoints = myChart.getElementsAtEvent(evt);
            //     var firstPoint = activePoints[0];
            //     var label = myChart.data.labels[firstPoint._index];
            //     var value = myChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];
            //     console.log(firstPoint._index)
            //     alert(label + ": " + value);
            // };

        </script> -->
        <script>
            var xlabels = [];
            var ylabels = [];

            <% for (var x = 0; x < sessionObjectsSQL.length; x++) { %>
                xlabels.push("<%= sessionObjectsSQL[x].date %>");
                ylabels.push(<%= sessionObjectsSQL[x].totalPP %>);
            <% } %>


            var ctx = document.getElementById('SessionPPChart').getContext('2d');
            var SessionPPChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: xlabels,
                    datasets: [{
                        label: 'PP',
                        data: ylabels,
                        fill: false,
                        backgroundColor: 'rgba(77, 164, 248, 0.5)',
                        borderColor: 'rgba(77, 164, 248, 1)',
                        borderWidth: 1
                    }]
                },
                maintainAspectRatio: true,
                options: {
                    responsive: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: false,
                                callback: function (value, index, values) {
                                    return value + " PP"
                                }
                            }
                        }],
                    }
                }
            });

            document.getElementById("SessionPPChart").onclick = function (evt) {
                var activePoints = SessionPPChart.getElementsAtEvent(evt);
                var firstPoint = activePoints[0];
                var label = SessionPPChart.data.labels[firstPoint._index];
                var value = SessionPPChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];
                console.log(firstPoint._index)
                //alert(label + ": " + value);
            };

        </script>
        </br>
        </br>

        <script>
            var xlabels = [];
            var ylabels = [];

             <% for (var x = 0; x < sessionObjectsSQL.length; x++) { %>
                xlabels.push("<%= sessionObjectsSQL[x].date %>");
                ylabels.push("<%= sessionObjectsSQL[x].accuracy %>");
             <% } %>

                console.log(xlabels)
            console.log(ylabels)


            var ctx = document.getElementById('SessionAccChart').getContext('2d');
            var SessiontotalPPChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: xlabels,
                    datasets: [{
                        label: 'Accuracy %',
                        data: ylabels,
                        fill: false,
                        backgroundColor: 'rgba(77, 164, 248, 0.5)',
                        borderColor: 'rgba(77, 164, 248, 1)',
                        borderWidth: 1
                    }]
                },
                maintainAspectRatio: true,
                options: {
                    responsive: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: false,
                                callback: function (value, index, values) {
                                    return value + "%"
                                }
                            }
                        }],
                    }
                }
            });

            document.getElementById("SessionAccChart").onclick = function (evt) {
                var activePoints = SessiontotalPPChart.getElementsAtEvent(evt);
                var firstPoint = activePoints[0];
                var label = SessiontotalPPChart.data.labels[firstPoint._index];
                var value = SessiontotalPPChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];
                console.log(firstPoint._index)
                //alert(label + ": " + value);
            };

        </script>

        <br />
        <a href="/return" class="btn btn-primary my-2">Back to dashboard</a>
    </section>
</main>

<center>
    <a href="/privacy"><strong>Privacy Policy</a></strong>
</center>

</html>